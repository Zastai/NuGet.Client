NuGet.Commands.LockFileBuilder.CreateLockFile(NuGet.ProjectModel.LockFile previousLockFile, NuGet.ProjectModel.PackageSpec project, System.Collections.Generic.IEnumerable<NuGet.Commands.RestoreTargetGraph> targetGraphs, System.Collections.Generic.IReadOnlyList<NuGet.Repositories.NuGetv3LocalRepository> localRepositories, NuGet.DependencyResolver.RemoteWalkContext context, NuGet.Commands.LockFileBuilderCache lockFileBuilderCache) -> NuGet.ProjectModel.LockFile
NuGet.Commands.LockFileBuilderCache.TryAddLockFileTargetLibrary(NuGet.Commands.RestoreTargetGraph graph, NuGet.Frameworks.NuGetFramework framework, NuGet.ProjectModel.LockFileLibrary lockFileLibrary, NuGet.LibraryModel.LibraryDependency libraryDependency, NuGet.LibraryModel.LibraryIncludeFlags libraryIncludeFlags, NuGet.ProjectModel.LockFileTargetLibrary lockFileTargetLibrary) -> bool
NuGet.Commands.LockFileBuilderCache.TryGetLockFileTargetLibrary(NuGet.Commands.RestoreTargetGraph graph, NuGet.Frameworks.NuGetFramework framework, NuGet.ProjectModel.LockFileLibrary lockFileLibrary, NuGet.LibraryModel.LibraryDependency libraryDependency, NuGet.LibraryModel.LibraryIncludeFlags libraryIncludeFlags) -> NuGet.ProjectModel.LockFileTargetLibrary
NuGet.Commands.RestoreRequest.RestoreRequest(NuGet.ProjectModel.PackageSpec project, NuGet.Commands.RestoreCommandProviders dependencyProviders, NuGet.Protocol.Core.Types.SourceCacheContext cacheContext, NuGet.Packaging.Signing.ClientPolicyContext clientPolicyContext, NuGet.Common.ILogger log, NuGet.Commands.LockFileBuilderCache lockFileBuilderCache) -> void